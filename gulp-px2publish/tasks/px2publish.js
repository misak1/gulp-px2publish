// Generated by CoffeeScript 1.11.1
(function() {
  var M, _, _expand, _path, _rename_f, config, exec, fnPx2Publish, fs, gulp, handleErrors, path, paths, px2publish, util;

  config = require('../config');

  paths = config.paths;

  _expand = config._expand;

  _rename_f = config._rename_f;

  _path = config._path;

  handleErrors = config.handleErrors;

  M = require('m-require');

  _ = M.require('underscore');

  gulp = M.require('gulp');

  util = M.require('gulp-util');

  fs = M.require('fs');

  exec = require('child_process').exec;

  global.paths_region = [];

  px2publish = require(process.cwd() + '/.px2publish.js');

  path = require('path');

  global.Px2dir = path.dirname(px2publish.config.px_execute_path) + '/';

  global.phpbin = px2publish.config.php_bin;

  fnPx2Publish = function() {
    var fnCheck, fnCreateParam, lockfile, target;
    target = void 0;
    if (typeof global.hook_path !== "undefined") {
      target = path.normalize(global.hook_path);
    }
    util.log('px2publish target', util.colors.green(target));
    if (target !== null && !/^\/px-files*/gm.test(target) && !/^\/caches*/gm.test(target)) {
      fnCreateParam = function(aryPath) {
        var aryParam, aryUniq;
        aryUniq = void 0;
        aryUniq = aryPath.filter(function(x, i, self) {
          return self.indexOf(x) === i;
        });
        aryParam = [];
        aryUniq.forEach((function(element) {
          aryParam.push('&paths_region[]=' + element);
        }), this);
        return aryParam.join('');
      };
      lockfile = global.Px2dir + '/px-files/_sys/ram/publish/applock.txt';
      fnCheck = function(err) {
        var fnPublish;
        global.paths_region.push(target);
        if (!err) {
          return util.log(util.colors.red('publish is now locked.'));
        } else {
          fnPublish = function() {
            var cmd;
            cmd = global.phpbin + ' ' + global.Px2dir + '.px_execute.php "/nothing/to/publish/?PX=publish.run' + fnCreateParam(global.paths_region) + '"';
            global.paths_region = [];
            util.log('px2publish cmd $ ', util.colors.green(cmd));
            return exec(cmd, function(err, stdout, stderr) {
              if (err) {
                console.log(err);
              }
              return console.log(stdout);
            });
          };
          return setTimeout(fnPublish, 1000);
        }
      };
      return fs.access(lockfile, fnCheck);
    }
  };

  gulp.task("px2publish", fnPx2Publish);

}).call(this);
